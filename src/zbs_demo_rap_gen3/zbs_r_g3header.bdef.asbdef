managed implementation in class ZBS_BP_R_G3HEADER unique;
strict ( 2 );
with draft;
extensible;
define behavior for ZBS_R_G3HEADER alias G3Header
persistent table ZBS_G3HEADER
extensible
draft table ZBS_G3HEADER_D
etag master LocalLastChangedAt
lock master total etag LastChangedAt
authorization master( global )

{
  field ( readonly )
   Uuid,
   LocalCreatedBy,
   LocalCreatedAt,
   LocalLastChangedBy,
   LocalLastChangedAt,
   LastChangedAt;

  field ( numbering : managed )
   Uuid;


  create;
  update;
  delete;

  draft action Activate optimized;
  draft action Discard;
  draft action Edit;
  draft action Resume;
  draft determine action Prepare;

  mapping for ZBS_G3HEADER corresponding extensible
  {
    Uuid = uuid;
    DocumentId = document_id;
    CustomerNumber = customer_number;
    Description = description;
    LocalCreatedBy = local_created_by;
    LocalCreatedAt = local_created_at;
    LocalLastChangedBy = local_last_changed_by;
    LocalLastChangedAt = local_last_changed_at;
    LastChangedAt = last_changed_at;
  }

  association _G3Position { create; with draft; }

}

define behavior for ZBS_R_G3POSITION alias G3Position
persistent table ZBS_G3POSITION
extensible
draft table ZBS_G3POSITION_D
etag dependent by _G3Header
lock dependent by _G3Header
authorization dependent by _G3Header

{
  field ( readonly )
   Uuid,
   ParentUuid;

  field ( numbering : managed )
   Uuid;


  update;
  delete;

  mapping for ZBS_G3POSITION corresponding extensible
  {
    Uuid = uuid;
    ParentUuid = parent_uuid;
    PositionNumber = position_number;
    PositionText = position_text;
    Amount = amount;
    Currency = currency;
  }

  association _G3Header { with draft; }
  association _G3Note { create; with draft; }

}

define behavior for ZBS_R_G3NOTE alias G3Note
persistent table ZBS_G3NOTE
extensible
draft table ZBS_G3NOTE_D
etag dependent by _G3Header
lock dependent by _G3Header
authorization dependent by _G3Header

{
  field ( readonly )
   Uuid,
   ParentUuid,
   RootUuid;

  field ( numbering : managed )
   Uuid;


  update;
  delete;

  mapping for ZBS_G3NOTE corresponding extensible
  {
    Uuid = uuid;
    ParentUuid = parent_uuid;
    RootUuid = root_uuid;
    AdditionalNote = additional_note;
  }

  association _G3Header { with draft; }
  association _G3Position { with draft; }

}